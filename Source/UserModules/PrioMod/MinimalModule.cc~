//
//	MinimalModule.cc		This file is a part of the IKAROS project
//                          <Short description of the module>
//
//    Copyright (C) 2007 <Author Name>
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with this program; if not, write to the Free Software
//    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
//    See http://www.ikaros-project.org/ for more information.
//
//	Created: <date>
//
//	<Additional description of the module>


#include "MinimalModule.h"
#include <XnOpenNI.h>
#include <XnLog.h>
#include <XnCppWrapper.h>

#define CHECK_RC(rc, what)											\
	if (rc != XN_STATUS_OK)											\
	{																\
		printf("%s failed: %s\n", what, xnGetStatusString(rc));		\
	}
		//return rc;												\


using namespace ikaros;
using namespace xn;

void
MinimalModule::Init()
{
	nRetVal = XN_STATUS_OK;
	context;

	nRetVal = context.Init();
	CHECK_RC(nRetVal, "Initialize context");

	depth;
	nRetVal = depth.Create(context);
	CHECK_RC(nRetVal, "Create depth generator");

	nRetVal = context.StartGeneratingAll();
	CHECK_RC(nRetVal, "StartGeneratingAll");

	depthMD;
}



void
MinimalModule::Tick(){
      nRetVal = context.WaitNoneUpdateAll();//depth);
  if (nRetVal != XN_STATUS_OK)
    {
      printf("UpdateData failed: %s\n", xnGetStatusString(nRetVal));
      //continue;
    }

  depth.GetMetaData(depthMD);
  printf("Frame %d Middle point is: %u.\n", depthMD.FrameID(), depthMD(depthMD.XRes() / 2, depthMD.YRes() / 2));

}
